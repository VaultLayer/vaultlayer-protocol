// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AllowedNFTUpdated extends ethereum.Event {
  get params(): AllowedNFTUpdated__Params {
    return new AllowedNFTUpdated__Params(this);
  }
}

export class AllowedNFTUpdated__Params {
  _event: AllowedNFTUpdated;

  constructor(event: AllowedNFTUpdated) {
    this._event = event;
  }

  get nftAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get allowed(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class BidCancelPeriodUpdated extends ethereum.Event {
  get params(): BidCancelPeriodUpdated__Params {
    return new BidCancelPeriodUpdated__Params(this);
  }
}

export class BidCancelPeriodUpdated__Params {
  _event: BidCancelPeriodUpdated;

  constructor(event: BidCancelPeriodUpdated) {
    this._event = event;
  }

  get newBidCancelPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FundsWithdrawn extends ethereum.Event {
  get params(): FundsWithdrawn__Params {
    return new FundsWithdrawn__Params(this);
  }
}

export class FundsWithdrawn__Params {
  _event: FundsWithdrawn;

  constructor(event: FundsWithdrawn) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class LoanAccepted extends ethereum.Event {
  get params(): LoanAccepted__Params {
    return new LoanAccepted__Params(this);
  }
}

export class LoanAccepted__Params {
  _event: LoanAccepted;

  constructor(event: LoanAccepted) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get startTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LoanBidCancelled extends ethereum.Event {
  get params(): LoanBidCancelled__Params {
    return new LoanBidCancelled__Params(this);
  }
}

export class LoanBidCancelled__Params {
  _event: LoanBidCancelled;

  constructor(event: LoanBidCancelled) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LoanBidPlaced extends ethereum.Event {
  get params(): LoanBidPlaced__Params {
    return new LoanBidPlaced__Params(this);
  }
}

export class LoanBidPlaced__Params {
  _event: LoanBidPlaced;

  constructor(event: LoanBidPlaced) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get currentInterestRate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LoanDefaulted extends ethereum.Event {
  get params(): LoanDefaulted__Params {
    return new LoanDefaulted__Params(this);
  }
}

export class LoanDefaulted__Params {
  _event: LoanDefaulted;

  constructor(event: LoanDefaulted) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LoanDelisted extends ethereum.Event {
  get params(): LoanDelisted__Params {
    return new LoanDelisted__Params(this);
  }
}

export class LoanDelisted__Params {
  _event: LoanDelisted;

  constructor(event: LoanDelisted) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LoanListed extends ethereum.Event {
  get params(): LoanListed__Params {
    return new LoanListed__Params(this);
  }
}

export class LoanListed__Params {
  _event: LoanListed;

  constructor(event: LoanListed) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get loanAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get maxInterestRate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get loanType(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class LoanRepaid extends ethereum.Event {
  get params(): LoanRepaid__Params {
    return new LoanRepaid__Params(this);
  }
}

export class LoanRepaid__Params {
  _event: LoanRepaid;

  constructor(event: LoanRepaid) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get repaymentAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MaxActiveLoansUpdated extends ethereum.Event {
  get params(): MaxActiveLoansUpdated__Params {
    return new MaxActiveLoansUpdated__Params(this);
  }
}

export class MaxActiveLoansUpdated__Params {
  _event: MaxActiveLoansUpdated;

  constructor(event: MaxActiveLoansUpdated) {
    this._event = event;
  }

  get newMaxActiveLoans(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class PendingWithdrawalAdded extends ethereum.Event {
  get params(): PendingWithdrawalAdded__Params {
    return new PendingWithdrawalAdded__Params(this);
  }
}

export class PendingWithdrawalAdded__Params {
  _event: PendingWithdrawalAdded;

  constructor(event: PendingWithdrawalAdded) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProtocolFeeRateUpdated extends ethereum.Event {
  get params(): ProtocolFeeRateUpdated__Params {
    return new ProtocolFeeRateUpdated__Params(this);
  }
}

export class ProtocolFeeRateUpdated__Params {
  _event: ProtocolFeeRateUpdated;

  constructor(event: ProtocolFeeRateUpdated) {
    this._event = event;
  }

  get newFeeRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProtocolFeesWithdrawn extends ethereum.Event {
  get params(): ProtocolFeesWithdrawn__Params {
    return new ProtocolFeesWithdrawn__Params(this);
  }
}

export class ProtocolFeesWithdrawn__Params {
  _event: ProtocolFeesWithdrawn;

  constructor(event: ProtocolFeesWithdrawn) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NFTLendAuctionV1__loansResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: i32;
  value10: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: i32,
    value10: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set(
      "value9",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value9)),
    );
    map.set("value10", ethereum.Value.fromBoolean(this.value10));
    return map;
  }

  getBorrower(): Address {
    return this.value0;
  }

  getLender(): Address {
    return this.value1;
  }

  getNftAddress(): Address {
    return this.value2;
  }

  getTokenId(): BigInt {
    return this.value3;
  }

  getLoanAmount(): BigInt {
    return this.value4;
  }

  getMaxInterestRate(): BigInt {
    return this.value5;
  }

  getCurrentInterestRate(): BigInt {
    return this.value6;
  }

  getDuration(): BigInt {
    return this.value7;
  }

  getStartTime(): BigInt {
    return this.value8;
  }

  getLoanType(): i32 {
    return this.value9;
  }

  getIsAccepted(): boolean {
    return this.value10;
  }
}

export class NFTLendAuctionV1 extends ethereum.SmartContract {
  static bind(address: Address): NFTLendAuctionV1 {
    return new NFTLendAuctionV1("NFTLendAuctionV1", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MANAGER_ROLE(): Bytes {
    let result = super.call("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OWNER_ROLE(): Bytes {
    let result = super.call("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OWNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  activeLoanIds(param0: BigInt): BigInt {
    let result = super.call(
      "activeLoanIds",
      "activeLoanIds(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBigInt();
  }

  try_activeLoanIds(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "activeLoanIds",
      "activeLoanIds(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  activeLoans(param0: BigInt): boolean {
    let result = super.call("activeLoans", "activeLoans(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toBoolean();
  }

  try_activeLoans(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("activeLoans", "activeLoans(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  allowedNFTContracts(param0: Address): boolean {
    let result = super.call(
      "allowedNFTContracts",
      "allowedNFTContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_allowedNFTContracts(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowedNFTContracts",
      "allowedNFTContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  bidCancelPeriod(): BigInt {
    let result = super.call(
      "bidCancelPeriod",
      "bidCancelPeriod():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_bidCancelPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "bidCancelPeriod",
      "bidCancelPeriod():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bidTimestamps(param0: BigInt): BigInt {
    let result = super.call(
      "bidTimestamps",
      "bidTimestamps(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBigInt();
  }

  try_bidTimestamps(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "bidTimestamps",
      "bidTimestamps(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  escrowedFunds(param0: BigInt): BigInt {
    let result = super.call(
      "escrowedFunds",
      "escrowedFunds(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBigInt();
  }

  try_escrowedFunds(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "escrowedFunds",
      "escrowedFunds(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getActiveLoans(): Array<BigInt> {
    let result = super.call(
      "getActiveLoans",
      "getActiveLoans():(uint256[])",
      [],
    );

    return result[0].toBigIntArray();
  }

  try_getActiveLoans(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getActiveLoans",
      "getActiveLoans():(uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTotalRepayment(loanId: BigInt): BigInt {
    let result = super.call(
      "getTotalRepayment",
      "getTotalRepayment(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(loanId)],
    );

    return result[0].toBigInt();
  }

  try_getTotalRepayment(loanId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalRepayment",
      "getTotalRepayment(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(loanId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isCollateralized(param0: Address, param1: BigInt): boolean {
    let result = super.call(
      "isCollateralized",
      "isCollateralized(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_isCollateralized(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isCollateralized",
      "isCollateralized(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  loanCounter(): BigInt {
    let result = super.call("loanCounter", "loanCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_loanCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("loanCounter", "loanCounter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  loans(param0: BigInt): NFTLendAuctionV1__loansResult {
    let result = super.call(
      "loans",
      "loans(uint256):(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new NFTLendAuctionV1__loansResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toI32(),
      result[10].toBoolean(),
    );
  }

  try_loans(
    param0: BigInt,
  ): ethereum.CallResult<NFTLendAuctionV1__loansResult> {
    let result = super.tryCall(
      "loans",
      "loans(uint256):(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NFTLendAuctionV1__loansResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toI32(),
        value[10].toBoolean(),
      ),
    );
  }

  maxActiveLoans(): BigInt {
    let result = super.call("maxActiveLoans", "maxActiveLoans():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxActiveLoans(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxActiveLoans",
      "maxActiveLoans():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pendingWithdrawals(param0: Address): BigInt {
    let result = super.call(
      "pendingWithdrawals",
      "pendingWithdrawals(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_pendingWithdrawals(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingWithdrawals",
      "pendingWithdrawals(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protocolFeeBalance(): BigInt {
    let result = super.call(
      "protocolFeeBalance",
      "protocolFeeBalance():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_protocolFeeBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "protocolFeeBalance",
      "protocolFeeBalance():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protocolFeeRate(): BigInt {
    let result = super.call(
      "protocolFeeRate",
      "protocolFeeRate():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_protocolFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "protocolFeeRate",
      "protocolFeeRate():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalPendingWithdrawals(): BigInt {
    let result = super.call(
      "totalPendingWithdrawals",
      "totalPendingWithdrawals():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_totalPendingWithdrawals(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalPendingWithdrawals",
      "totalPendingWithdrawals():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _govAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptLoanCall extends ethereum.Call {
  get inputs(): AcceptLoanCall__Inputs {
    return new AcceptLoanCall__Inputs(this);
  }

  get outputs(): AcceptLoanCall__Outputs {
    return new AcceptLoanCall__Outputs(this);
  }
}

export class AcceptLoanCall__Inputs {
  _call: AcceptLoanCall;

  constructor(call: AcceptLoanCall) {
    this._call = call;
  }

  get loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptLoanCall__Outputs {
  _call: AcceptLoanCall;

  constructor(call: AcceptLoanCall) {
    this._call = call;
  }
}

export class CancelBidCall extends ethereum.Call {
  get inputs(): CancelBidCall__Inputs {
    return new CancelBidCall__Inputs(this);
  }

  get outputs(): CancelBidCall__Outputs {
    return new CancelBidCall__Outputs(this);
  }
}

export class CancelBidCall__Inputs {
  _call: CancelBidCall;

  constructor(call: CancelBidCall) {
    this._call = call;
  }

  get loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelBidCall__Outputs {
  _call: CancelBidCall;

  constructor(call: CancelBidCall) {
    this._call = call;
  }
}

export class ClaimDefaultedLoanCall extends ethereum.Call {
  get inputs(): ClaimDefaultedLoanCall__Inputs {
    return new ClaimDefaultedLoanCall__Inputs(this);
  }

  get outputs(): ClaimDefaultedLoanCall__Outputs {
    return new ClaimDefaultedLoanCall__Outputs(this);
  }
}

export class ClaimDefaultedLoanCall__Inputs {
  _call: ClaimDefaultedLoanCall;

  constructor(call: ClaimDefaultedLoanCall) {
    this._call = call;
  }

  get loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimDefaultedLoanCall__Outputs {
  _call: ClaimDefaultedLoanCall;

  constructor(call: ClaimDefaultedLoanCall) {
    this._call = call;
  }
}

export class DelistLoanCall extends ethereum.Call {
  get inputs(): DelistLoanCall__Inputs {
    return new DelistLoanCall__Inputs(this);
  }

  get outputs(): DelistLoanCall__Outputs {
    return new DelistLoanCall__Outputs(this);
  }
}

export class DelistLoanCall__Inputs {
  _call: DelistLoanCall;

  constructor(call: DelistLoanCall) {
    this._call = call;
  }

  get loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DelistLoanCall__Outputs {
  _call: DelistLoanCall;

  constructor(call: DelistLoanCall) {
    this._call = call;
  }
}

export class GrantManagerRoleCall extends ethereum.Call {
  get inputs(): GrantManagerRoleCall__Inputs {
    return new GrantManagerRoleCall__Inputs(this);
  }

  get outputs(): GrantManagerRoleCall__Outputs {
    return new GrantManagerRoleCall__Outputs(this);
  }
}

export class GrantManagerRoleCall__Inputs {
  _call: GrantManagerRoleCall;

  constructor(call: GrantManagerRoleCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GrantManagerRoleCall__Outputs {
  _call: GrantManagerRoleCall;

  constructor(call: GrantManagerRoleCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class ListLoanCall extends ethereum.Call {
  get inputs(): ListLoanCall__Inputs {
    return new ListLoanCall__Inputs(this);
  }

  get outputs(): ListLoanCall__Outputs {
    return new ListLoanCall__Outputs(this);
  }
}

export class ListLoanCall__Inputs {
  _call: ListLoanCall;

  constructor(call: ListLoanCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get maxInterestRate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get loanType(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class ListLoanCall__Outputs {
  _call: ListLoanCall;

  constructor(call: ListLoanCall) {
    this._call = call;
  }
}

export class PlaceBidCall extends ethereum.Call {
  get inputs(): PlaceBidCall__Inputs {
    return new PlaceBidCall__Inputs(this);
  }

  get outputs(): PlaceBidCall__Outputs {
    return new PlaceBidCall__Outputs(this);
  }
}

export class PlaceBidCall__Inputs {
  _call: PlaceBidCall;

  constructor(call: PlaceBidCall) {
    this._call = call;
  }

  get loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get interestRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class PlaceBidCall__Outputs {
  _call: PlaceBidCall;

  constructor(call: PlaceBidCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get callerConfirmation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RepayLoanCall extends ethereum.Call {
  get inputs(): RepayLoanCall__Inputs {
    return new RepayLoanCall__Inputs(this);
  }

  get outputs(): RepayLoanCall__Outputs {
    return new RepayLoanCall__Outputs(this);
  }
}

export class RepayLoanCall__Inputs {
  _call: RepayLoanCall;

  constructor(call: RepayLoanCall) {
    this._call = call;
  }

  get loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RepayLoanCall__Outputs {
  _call: RepayLoanCall;

  constructor(call: RepayLoanCall) {
    this._call = call;
  }
}

export class RevokeManagerRoleCall extends ethereum.Call {
  get inputs(): RevokeManagerRoleCall__Inputs {
    return new RevokeManagerRoleCall__Inputs(this);
  }

  get outputs(): RevokeManagerRoleCall__Outputs {
    return new RevokeManagerRoleCall__Outputs(this);
  }
}

export class RevokeManagerRoleCall__Inputs {
  _call: RevokeManagerRoleCall;

  constructor(call: RevokeManagerRoleCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeManagerRoleCall__Outputs {
  _call: RevokeManagerRoleCall;

  constructor(call: RevokeManagerRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetBidCancelPeriodCall extends ethereum.Call {
  get inputs(): SetBidCancelPeriodCall__Inputs {
    return new SetBidCancelPeriodCall__Inputs(this);
  }

  get outputs(): SetBidCancelPeriodCall__Outputs {
    return new SetBidCancelPeriodCall__Outputs(this);
  }
}

export class SetBidCancelPeriodCall__Inputs {
  _call: SetBidCancelPeriodCall;

  constructor(call: SetBidCancelPeriodCall) {
    this._call = call;
  }

  get newBidCancelPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBidCancelPeriodCall__Outputs {
  _call: SetBidCancelPeriodCall;

  constructor(call: SetBidCancelPeriodCall) {
    this._call = call;
  }
}

export class SetMaxActiveLoansCall extends ethereum.Call {
  get inputs(): SetMaxActiveLoansCall__Inputs {
    return new SetMaxActiveLoansCall__Inputs(this);
  }

  get outputs(): SetMaxActiveLoansCall__Outputs {
    return new SetMaxActiveLoansCall__Outputs(this);
  }
}

export class SetMaxActiveLoansCall__Inputs {
  _call: SetMaxActiveLoansCall;

  constructor(call: SetMaxActiveLoansCall) {
    this._call = call;
  }

  get newMax(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxActiveLoansCall__Outputs {
  _call: SetMaxActiveLoansCall;

  constructor(call: SetMaxActiveLoansCall) {
    this._call = call;
  }
}

export class SetProtocolFeeRateCall extends ethereum.Call {
  get inputs(): SetProtocolFeeRateCall__Inputs {
    return new SetProtocolFeeRateCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeRateCall__Outputs {
    return new SetProtocolFeeRateCall__Outputs(this);
  }
}

export class SetProtocolFeeRateCall__Inputs {
  _call: SetProtocolFeeRateCall;

  constructor(call: SetProtocolFeeRateCall) {
    this._call = call;
  }

  get newFeeRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeRateCall__Outputs {
  _call: SetProtocolFeeRateCall;

  constructor(call: SetProtocolFeeRateCall) {
    this._call = call;
  }
}

export class UpdateAllowedNFTCall extends ethereum.Call {
  get inputs(): UpdateAllowedNFTCall__Inputs {
    return new UpdateAllowedNFTCall__Inputs(this);
  }

  get outputs(): UpdateAllowedNFTCall__Outputs {
    return new UpdateAllowedNFTCall__Outputs(this);
  }
}

export class UpdateAllowedNFTCall__Inputs {
  _call: UpdateAllowedNFTCall;

  constructor(call: UpdateAllowedNFTCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get allowed(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UpdateAllowedNFTCall__Outputs {
  _call: UpdateAllowedNFTCall;

  constructor(call: UpdateAllowedNFTCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}

export class WithdrawProtocolFeesCall extends ethereum.Call {
  get inputs(): WithdrawProtocolFeesCall__Inputs {
    return new WithdrawProtocolFeesCall__Inputs(this);
  }

  get outputs(): WithdrawProtocolFeesCall__Outputs {
    return new WithdrawProtocolFeesCall__Outputs(this);
  }
}

export class WithdrawProtocolFeesCall__Inputs {
  _call: WithdrawProtocolFeesCall;

  constructor(call: WithdrawProtocolFeesCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawProtocolFeesCall__Outputs {
  _call: WithdrawProtocolFeesCall;

  constructor(call: WithdrawProtocolFeesCall) {
    this._call = call;
  }
}
